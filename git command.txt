1.初始化配置用户名和邮箱，只有第一次使用git时配置
git  config  --global  user.name "liran" #配置用户名
git  config  --global  user.email "liran@123.com" #配置邮箱
git  config  --list  #查看配置列表
# 代表注释
q 结束
clear 清屏

2.操作本地仓库
git  init  #把文件夹初始化为本地仓库
git status #观察那些文件没有放入暂存区
git  add  文件名称  #一次往暂存区添加一个文件
git  add   .  #把所有文件都添加到暂存区  
git  commit  -m  解释说明 #把暂存区的文件添加到本地仓库
git  log   #查看当前版本之前的所有版本
git checkout 文件名称 #把暂存区中的文件覆盖操作空间中的文件,不能断电
git  reset  --hard  提交的id #把仓库中恢复到操作空间
git  reflog  #查看仓库所有版本以及恢复记录

创建.gitignore文件，把不想提交的文件名写在这个文件中
.gitignore文件必须使用开发软件创建

创建本地仓库tedu
1.仓库初始化
2.创建user.html和product.html 随便写内容
3.添加到暂存区，提交给本地仓库-----版本1
4.改变user.html的内容，提交给仓库-----版本2
5.创建list.html内容随意，提交给仓库----版本3
6.修改list.html内容，提交给仓库------版本4
7.回滚到版本1
8.回滚到版本2
9.创建my.html和your.html。提交时your.html不提交
10.github.com的注册

github
git remote add origin https://github.com/liran0210/2007-1.git
#把网络仓库的连接放进别名中origin 
git push -u origin master #把本地仓库推送给网络仓库

git clone https://github.com/liran0210/2007-1.git
#在本地没仓库的情况下，下载网络仓库使用clone
git pull https://github.com/liran0210/2007-1.git
#在本地存在仓库中，从网络仓储拿代码

git 分支
git branch  #查看所有分支
git branch  分支名称   #新建分支
git checkout  分支名称   #切换分支
git merge  分支名称  #当前分支合并另一个分支
git branch  -d  分支名称  #删除已被合并的分支
git branch  -D  分支名称





